[4mMAKE[24m(1)                           User Commands                           [4mMAKE[24m(1)

[1mNAME[0m
       make - GNU make utility to maintain groups of programs

[1mSYNOPSIS[0m
       [1mmake [22m[[4mOPTION[24m]... [[4mTARGET[24m]...

[1mDESCRIPTION[0m
       The [4mmake[24m utility will determine automatically which pieces of a large pro‚Äê
       gram need to be recompiled, and issue the commands to recompile them.  The
       manual  describes  the  GNU  implementation  of [1mmake[22m, which was written by
       Richard Stallman and Roland McGrath, and is currently maintained  by  Paul
       Smith.   Our examples show C programs, since they are very common, but you
       can use [1mmake [22mwith any programming language whose compiler can be run  with
       a  shell  command.  In fact, [1mmake [22mis not limited to programs.  You can use
       it to describe any task where some files  must  be  updated  automatically
       from others whenever the others change.

       To prepare to use [1mmake[22m, you must write a file called the [4mmakefile[24m that de‚Äê
       scribes  the relationships among files in your program, and the states the
       commands for updating each file.  In a program, typically  the  executable
       file  is  updated  from  object files, which are in turn made by compiling
       source files.

       Once a suitable makefile exists, each time you change some  source  files,
       this simple shell command:

              [1mmake[0m

       suffices  to  perform all necessary recompilations.  The [1mmake [22mprogram uses
       the makefile description and the last-modification times of the  files  to
       decide which of the files need to be updated.  For each of those files, it
       issues the commands recorded in the makefile.

       [1mmake [22mexecutes commands in the [4mmakefile[24m to update one or more target [4mnames[24m,
       where  [4mname[24m is typically a program.  If no [1m-f [22moption is present, [1mmake [22mwill
       look for the makefiles [4mGNUmakefile[24m, [4mmakefile[24m, and [4mMakefile[24m, in that order.

       Normally you should call your makefile either [4mmakefile[24m or  [4mMakefile[24m.   (We
       recommend  [4mMakefile[24m because it appears prominently near the beginning of a
       directory listing, right near other important files such as [4mREADME[24m.)   The
       first  name  checked,  [4mGNUmakefile[24m, is not recommended for most makefiles.
       You should use this name if you have a makefile that is  specific  to  GNU
       [1mmake[22m,  and  will not be understood by other versions of [1mmake[22m.  If [4mmakefile[0m
       is '-', the standard input is read.

       [1mmake [22mupdates a target if it depends on prerequisite files that  have  been
       modified since the target was last modified, or if the target does not ex‚Äê
       ist.

[1mOPTIONS[0m
       [1m-b[22m, [1m-m[0m
            These  options  are  ignored for compatibility with other versions of
            [1mmake[22m.

       [1m-B[22m, [1m--always-make[0m
            Unconditionally make all targets.

       [1m-C [4m[22mdir[24m, [1m--directory[22m=[4mdir[0m
            Change to directory [4mdir[24m before reading the makefiles  or  doing  any‚Äê
            thing  else.   If  multiple  [1m-C [22moptions are specified, each is inter‚Äê
            preted relative to the previous one: [1m-C [22m/ [1m-C [22metc is equivalent to  [1m-C[0m
            /etc.  This is typically used with recursive invocations of [1mmake[22m.

       [1m-d   [22mPrint  debugging  information  in addition to normal processing.  The
            debugging information says which files are being considered  for  re‚Äê
            making,  which  file-times  are being compared and with what results,
            which files actually need to be remade, which implicit rules are con‚Äê
            sidered and which are applied---everything interesting about how [1mmake[0m
            decides what to do.

       [1m--debug[4m[22m[=FLAGS][0m
            Print debugging information in addition to normal processing.  If the
            [4mFLAGS[24m are omitted, then the behavior is the same as if [1m-d [22mwas  speci‚Äê
            fied.   [4mFLAGS[24m may be [4ma[24m for all debugging output (same as using [1m-d[22m), [4mb[0m
            for basic debugging, [4mv[24m for more verbose basic debugging, [4mi[24m for  show‚Äê
            ing  implicit  rules,  [4mj[24m for details on invocation of commands, and [4mm[0m
            for debugging while remaking makefiles.  Use [4mn[24m to disable all  previ‚Äê
            ous debugging flags.

       [1m-e[22m, [1m--environment-overrides[0m
            Give  variables  taken from the environment precedence over variables
            from makefiles.

       [1m-f [4m[22mfile[24m, [1m--file[22m=[4mfile[24m, [1m--makefile[22m=[4mFILE[0m
            Use [4mfile[24m as a makefile.

       [1m-i[22m, [1m--ignore-errors[0m
            Ignore all errors in commands executed to remake files.

       [1m-I [4m[22mdir[24m, [1m--include-dir[22m=[4mdir[0m
            Specifies a directory [4mdir[24m to search for included makefiles.  If  sev‚Äê
            eral [1m-I [22moptions are used to specify several directories, the directo‚Äê
            ries  are  searched  in the order specified.  Unlike the arguments to
            other flags of [1mmake[22m, directories given with [1m-I  [22mflags  may  come  di‚Äê
            rectly  after  the  flag:  [1m-I[4m[22mdir[24m is allowed, as well as [1m-I [4m[22mdir[24m.  This
            syntax is allowed for compatibility  with  the  C  preprocessor's  [1m-I[0m
            flag.

       [1m-j [22m[[4mjobs[24m], [1m--jobs[22m[=[4mjobs[24m]
            Specifies  the  number  of [4mjobs[24m (commands) to run simultaneously.  If
            there is more than one [1m-j [22moption, the last one is effective.  If  the
            [1m-j  [22moption is given without an argument, [1mmake [22mwill not limit the num‚Äê
            ber of jobs that can run simultaneously. When  [1mmake  [22minvokes  a  [1msub-[0m
            [1mmake, [22mall instances of make will coordinate to run the specified num‚Äê
            ber  of  jobs  at  a time; see the section [1mPARALLEL MAKE AND THE JOB‚Äê[0m
            [1mSERVER [22mfor details.

       [1m--jobserver-fds [22m[[4mR,W[24m]
            Internal option [1mmake [22muses to pass the jobserver pipe read  and  write
            file  descriptor  numbers to [1msub-makes; [22msee the section [1mPARALLEL MAKE[0m
            [1mAND THE JOBSERVER [22mfor details

       [1m-k[22m, [1m--keep-going[0m
            Continue as much as possible after an error.  While the  target  that
            failed,  and those that depend on it, cannot be remade, the other de‚Äê
            pendencies of these targets can be processed all the same.

       [1m-l [22m[[4mload[24m], [1m--load-average[22m[=[4mload[24m]
            Specifies that no new jobs (commands) should be started if there  are
            others  jobs  running and the load average is at least [4mload[24m (a float‚Äê
            ing-point number).  With no argument, removes a previous load limit.

       [1m-L[22m, [1m--check-symlink-times[0m
            Use the latest mtime between symlinks and target.

       [1m-n[22m, [1m--just-print[22m, [1m--dry-run[22m, [1m--recon[0m
            Print the commands that would be executed, but do  not  execute  them
            (except in certain circumstances).

       [1m-o [4m[22mfile[24m, [1m--old-file[22m=[4mfile[24m, [1m--assume-old[22m=[4mfile[0m
            Do  not  remake  the file [4mfile[24m even if it is older than its dependen‚Äê
            cies, and do not remake anything on account of changes in [4mfile[24m.   Es‚Äê
            sentially the file is treated as very old and its rules are ignored.

       [1m-O[22m[[4mtype[24m], [1m--output-sync[22m[=[4mtype[24m]
            When  running multiple jobs in parallel with [1m-j[22m, ensure the output of
            each job is collected together rather than interspersed  with  output
            from  other  jobs.   If [4mtype[24m is not specified or is [1mtarget [22mthe output
            from the entire recipe for each target is grouped together.  If  [4mtype[0m
            is  [1mline [22mthe output from each command line within a recipe is grouped
            together.  If [4mtype[24m is [1mrecurse [22moutput from an entire recursive make is
            grouped together.  If [4mtype[24m is [1mnone  [22moutput  synchronization  is  dis‚Äê
            abled.

       [1m-p[22m, [1m--print-data-base[0m
            Print  the  data  base  (rules and variable values) that results from
            reading the makefiles; then execute as usual or as  otherwise  speci‚Äê
            fied.   This  also  prints  the  version  information given by the [1m-v[0m
            switch (see below).  To print the data base without trying to  remake
            any files, use [4mmake[24m [4m-p[24m [4m-f/dev/null[24m.

       [1m-q[22m, [1m--question[0m
            ``Question  mode''.  Do not run any commands, or print anything; just
            return an exit status that is zero if the specified targets  are  al‚Äê
            ready up to date, nonzero otherwise.

       [1m-r[22m, [1m--no-builtin-rules[0m
            Eliminate use of the built-in implicit rules.  Also clear out the de‚Äê
            fault list of suffixes for suffix rules.

       [1m-R[22m, [1m--no-builtin-variables[0m
            Don't define any built-in variables.

       [1m-s[22m, [1m--silent[22m, [1m--quiet[0m
            Silent operation; do not print the commands as they are executed.

       [1m-S[22m, [1m--no-keep-going[22m, [1m--stop[0m
            Cancel  the  effect of the [1m-k [22moption.  This is never necessary except
            in a recursive [1mmake [22mwhere [1m-k [22mmight be inherited  from  the  top-level
            [1mmake [22mvia MAKEFLAGS or if you set [1m-k [22min MAKEFLAGS in your environment.

       [1m-t[22m, [1m--touch[0m
            Touch  files  (mark them up to date without really changing them) in‚Äê
            stead of running their commands.  This is used to  pretend  that  the
            commands were done, in order to fool future invocations of [1mmake[22m.

       [1m--trace[0m
            Information  about the disposition of each target is printed (why the
            target is being rebuilt and what commands are run to rebuild it).

       [1m-v[22m, [1m--version[0m
            Print the version of the [1mmake [22mprogram plus a copyright, a list of au‚Äê
            thors and a notice that there is no warranty.

       [1m-w[22m, [1m--print-directory[0m
            Print a message containing the working  directory  before  and  after
            other  processing.   This may be useful for tracking down errors from
            complicated nests of recursive [1mmake [22mcommands.

       [1m--no-print-directory[0m
            Turn off [1m-w[22m, even if it was turned on implicitly.

       [1m-W [4m[22mfile[24m, [1m--what-if[22m=[4mfile[24m, [1m--new-file[22m=[4mfile[24m, [1m--assume-new[22m=[4mfile[0m
            Pretend that the target [4mfile[24m has just been modified.  When used  with
            the  [1m-n  [22mflag, this shows you what would happen if you were to modify
            that file.  Without [1m-n[22m, it is almost the same as running a [4mtouch[24m com‚Äê
            mand on the given file before running [1mmake[22m, except that the modifica‚Äê
            tion time is changed only in the imagination of [1mmake[22m.

       [1m--warn-undefined-variables[0m
            Warn when an undefined variable is referenced.

[1mEXIT STATUS[0m
       GNU [1mmake [22mexits with a status of zero if all  makefiles  were  successfully
       parsed and no targets that were built failed.  A status of one will be re‚Äê
       turned  if the [1m-q [22mflag was used and [1mmake [22mdetermines that a target needs to
       be rebuilt.  A status of two will be returned if any errors  were  encoun‚Äê
       tered.

[1mSEE ALSO[0m
       The full documentation for [1mmake [22mis maintained as a Texinfo manual.  If the
       [1minfo [22mand [1mmake [22mprograms are properly installed at your site, the command

              [1minfo make[0m

       should give you access to the complete manual. Additionally, the manual is
       also    available    online    at   [4mhttps://www.gnu.org/software/make/man‚Äê[0m
       [4mual/html_node/index.html[0m

[1mPARALLEL MAKE AND THE JOBSERVER[0m
       Using the [4m-j[24m option, the user can instruct [1mmake [22mto execute tasks in paral‚Äê
       lel. By specifying a numeric argument to [4m-j[24m the user may specify an  upper
       limit of the number of parallel tasks to be run.

       When the build environment is such that a top level [1mmake [22minvokes [1msub-makes[0m
       (for  instance, a style in which each sub-directory contains its own [4mMake‚Äê[0m
       [4mfile[24m ), no individual instance of [1mmake [22mknows how many tasks are running in
       parallel, so keeping the number of tasks under the upper  limit  would  be
       impossible  without  communication between all the [1mmake [22minstances running.
       While solutions like having the top level [1mmake [22mserve  as  a  central  con‚Äê
       troller  are  feasible,  or  using  other  synchronization mechanisms like
       shared memory or sockets can be created, the current implementation uses a
       simple shared pipe.

       This pipe is created by the top-level [1mmake [22mprocess, and passed on  to  all
       the  [1msub-makes.   [22mThe top level [1mmake[22mprocess[1mwrites N-1 [22mone-byte tokens into
       the pipe (The top level [1mmake [22mis assumed to reserve one token for  itself).
       Whenever  any  of the [1mmake [22mprocesses (including the top-level [1mmake [22m) needs
       to run a new task, it reads a byte from the shared pipe. If there  are  no
       tokens left, it must wait for a token to be written back to the pipe. Once
       the  task  is  completed, the [1mmake [22mprocess writes a token back to the pipe
       (and thus, if the tokens had been exhausted,  unblocking  the  first  [1mmake[0m
       process  that  was  waiting  to read a token).  Since only [1mN-1 [22mtokens were
       written into the pipe, no more than [1mN [22mtasks can be running  at  any  given
       time.

       If  the job to be run is not a [1msub-make [22mthen [1mmake [22mwill close the jobserver
       pipe file descriptors before invoking the commands, so  that  the  command
       can  not  interfere  with the [4mjobserver,[24m and the command does not find any
       unusual file descriptors.

[1mBUGS[0m
       See the chapter ``Problems and Bugs'' in [4mThe[24m [4mGNU[24m [4mMake[24m [4mManual[24m.

[1mAUTHOR[0m
       This manual page contributed by Dennis Morse of Stanford University.  Fur‚Äê
       ther updates contributed by Mike  Frysinger.   It  has  been  reworked  by
       Roland McGrath.  Maintained by Paul Smith.

[1mCOPYRIGHT[0m
       Copyright ¬© 1992-1993, 1996-2016 Free Software Foundation, Inc.  This file
       is part of [4mGNU[24m [4mmake[24m.

       GNU  Make is free software; you can redistribute it and/or modify it under
       the terms of the GNU General Public License as published by the Free Soft‚Äê
       ware Foundation; either version 3 of the License, or (at your option)  any
       later version.

       GNU  Make  is  distributed in the hope that it will be useful, but WITHOUT
       ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FIT‚Äê
       NESS FOR A PARTICULAR PURPOSE.  See the GNU  General  Public  License  for
       more details.

       You  should  have  received a copy of the GNU General Public License along
       with this program.  If not, see [4mhttp://www.gnu.org/licenses/[24m.

GNU                              28 February 2016                         [4mMAKE[24m(1)
